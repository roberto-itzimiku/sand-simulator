#ifndef PARTICLES_H
#define PARTICLES_H

#include <inttypes.h>
#include <stdbool.h>
#include "raylib.h"

///////////////////////////////////////////////////////////////////////////////////////////////////
//
// DEFINE STRUCT PARTICLE
//
///////////////////////////////////////////////////////////////////////////////////////////////////
typedef struct Particle Particle_t;

struct Particle
{
	uint8_t id_type;
	Color   color;
};


///////////////////////////////////////////////////////////////////////////////////////////////////
//
// ID PARTICLES
//
///////////////////////////////////////////////////////////////////////////////////////////////////
#define AIR_ID   (uint8_t) 0
#define SAND_ID  (uint8_t) 1
#define ROCK_ID  (uint8_t) 2
#define WATER_ID (uint8_t) 3

///////////////////////////////////////////////////////////////////////////////////////////////////
//
// COLORS
//
///////////////////////////////////////////////////////////////////////////////////////////////////
#define AIR_COLOR   BLACK
#define SAND_COLOR  YELLOW
#define ROCK_COLOR  GRAY
#define WATER_COLOR BLUE

///////////////////////////////////////////////////////////////////////////////////////////////////
//
// MAKE, FREE, MANAGE PARTICLES, ETC...
//
///////////////////////////////////////////////////////////////////////////////////////////////////
Particle_t* make_particle(uint8_t id_type, Color color);
void free_particle(Particle_t* particle);
void set_particle(Particle_t* particle, uint8_t id_type, Color color);
void copy_particle(Particle_t* p1, Particle_t* p2);

///////////////////////////////////////////////////////////////////////////////////////////////////
//
// OTHERS
//
///////////////////////////////////////////////////////////////////////////////////////////////////
bool move_particle(Particle_t* parts, Particle_t* partN, uint32_t origin, uint32_t obj, uint8_t free_id);

///////////////////////////////////////////////////////////////////////////////////////////////////
//
// LOGIC PARTICLES
//
///////////////////////////////////////////////////////////////////////////////////////////////////
void particle_sand_update (Particle_t* parts, Particle_t* partN, uint32_t me, uint32_t nbD, uint32_t nbDL, uint32_t nbDR, uint32_t nbL, uint32_t nbR);
void particle_water_update(Particle_t* parts, Particle_t* partN, uint32_t me, uint32_t nbD, uint32_t nbDL, uint32_t nbDR, uint32_t nbL, uint32_t nbR);


#endif // PARTICLES_H